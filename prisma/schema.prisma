datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refreshToken      String? @db.Text
  accessToken       String? @db.Text
  expiresAt         Int?
  tokenType         String?
  scope             String?
  idToken           String? @db.Text
  sessionState      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  projects      Project[]

  @@map("users")
}

model Project {
  id          String     @id @default(cuid())
  name        String
  url         String     @unique
  description String
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  feedbacks   Feedback[]
  createdAt   DateTime   @default(now())

  @@map("projects")
}

model Feedback {
  id        String   @id @default(cuid())
  name      String
  email     String
  feedback  String
  rating    Int      @default(3)
  createdAt DateTime @default(now())
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])

  @@map("feedbacks")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}
